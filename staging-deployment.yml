apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-ai-code-review
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dev-ai-code-review
  template:
    metadata:
      labels:
        app: dev-ai-code-review
    spec:
      # Node Affinity for GPU nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                - <YOUR_NODE_GROUP_NAME>
              - key: node.kubernetes.io/instance-type
                operator: In
                values:
                - g4dn.xlarge
      tolerations:
      - key: "name"
        value: <YOUR_NODE_GROUP_TOLERATION_NAME>
        effect: "NoSchedule"
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      containers:
      - name: dev-ai-code-review
        image: <YOUR_ECR_IMAGE>
        env:
        - name: FLASK_APP
          value: "app.py"
        - name: FLASK_RUN_HOST
          value: "0.0.0.0"
        - name: FLASK_RUN_PORT
          value: "5001"
        - name: CUDA_VISIBLE_DEVICES
          value: ""
        - name: OLLAMA_MEMORY_MAPPING
          value: "true"
        startupProbe:
          httpGet:
          path: /health
            port: 5001
          # failureThreshold x periodSeconds = total time (e.g. 30 * 10 = 300s)
          failureThreshold: 40
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 5001
          initialDelaySeconds: 120
          timeoutSeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5001
          initialDelaySeconds: 100
          periodSeconds: 10
          timeoutSeconds: 30
        resources:
          requests:
            memory: "11Gi"
            cpu: "2"
          limits:
            memory: "15Gi"
            cpu: "3"
---
apiVersion: v1
kind: Service
metadata:
  name: dev-ai-code-review-service
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5001
  - name: https
    port: 443
    targetPort: 5001
  selector:
    app: dev-ai-code-review
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-ai-code-review-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  rules:
    - host: <YOUR_HOST>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dev-ai-code-review-service
                port:
                  number: 80